apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.sanjaya.mobileassignment"
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //instead of check Project level build.gradle for version values
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"

    //D2
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"


    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycleVersion"
    // alternatively - just ViewModel
    implementation "android.arch.lifecycle:viewmodel:$lifecycleVersion"// use -ktx for Kotlin
    // alternatively - just LiveData
    implementation "android.arch.lifecycle:livedata:$lifecycleVersion"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "android.arch.lifecycle:runtime:$lifecycleVersion"

    annotationProcessor "android.arch.lifecycle:compiler:$lifecycleVersion"// use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    implementation "android.arch.lifecycle:common-java8:$lifecycleVersion"

    // optional - ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$lifecycleVersion"

    // optional - Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:$lifecycleVersion"

    implementation "android.arch.persistence.room:runtime:$roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"// use kapt for Kotlin

    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$roomVersion"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "android.arch.persistence.room:guava:$roomVersion"

    // Test helpers
    testImplementation "android.arch.persistence.room:testing:$roomVersion"

    implementation "android.arch.paging:runtime:$pagingVersion"

    // alternatively - without Android dependencies for testing
    testImplementation "android.arch.paging:common:$pagingVersion"

    // optional - RxJava support, currently in release candidate
    implementation "android.arch.paging:rxjava2:1.0.0-rc1"


    // retrofit2 , rxjava , picasso
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"

    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjavaVersion"
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"
    implementation "com.facebook.stetho:stetho:$rootProject.stethoVersion"
    implementation "com.facebook.stetho:stetho-okhttp3:$rootProject.stethoVersion"


    // test
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
}
